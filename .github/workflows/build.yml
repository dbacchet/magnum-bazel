name: build

on: [push, pull_request, release]

jobs:

  linux:
    timeout-minutes: 50

    strategy:
      matrix:
        os: [ubuntu-16.04]
        # compiler: [g++, clang++]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Install system dependencies
      run: |
           sudo apt update
           sudo apt install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev
    - name: Install build dependencies
      run: |
           wget https://github.com/bazelbuild/bazel/releases/download/1.2.1/bazel-1.2.1-installer-linux-x86_64.sh
           chmod +x bazel-1.2.1-installer-linux-x86_64.sh
           sudo ./bazel-1.2.1-installer-linux-x86_64.sh
           rm bazel-1.2.1-installer-linux-x86_64.sh 
    - name: Build
      run: |
           ./build_magnum.sh
           # bazel build ...
    - name: Prepare package
      if: github.event_name == 'release'
      run: |
           echo ${{ github.event_name }}
           echo ${{ github.event.type }}
           echo ${{ github.event }}
           echo ${{ github.ref }}
           echo ${{ secrets.GITHUB_TOKEN }}
           echo "this is a release"
           tar -czvf archive.tgz BUILD.bazel build_magnum.sh
    - name: upload package
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${GITHUB_REF##*/}.tgz
        asset_name: mything.tgz
        tag: ${{ github.ref }}
        overwrite: true
    - name: Upload2
      if: github.event_name != 'release'
      run: |
           echo ${{ github.event_name }}
           echo ${{ github.event.type }}
           echo ${{ github.event }}
           echo ${{ github.ref }}
           echo ${{ secrets.GITHUB_TOKEN }}
           echo ${GITHUB_REF##*/}
    # - name: Run tests
    #   run: bazel test ...

  # macos:
  #   timeout-minutes: 50
  #
  #   runs-on: macOS-10.14
  #
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Install build dependencies
  #     run: |
  #          wget https://github.com/bazelbuild/bazel/releases/download/1.2.1/bazel-1.2.1-installer-darwin-x86_64.sh
  #          chmod +x bazel-1.2.1-installer-darwin-x86_64.sh
  #          sudo ./bazel-1.2.1-installer-darwin-x86_64.sh
  #          rm bazel-1.2.1-installer-darwin-x86_64.sh 
  #   - name: Build
  #     run: |
  #          ./build_magnum.sh
  #          # bazel build ...
  #   # - name: Run tests
  #   #   run: bazel test ...
